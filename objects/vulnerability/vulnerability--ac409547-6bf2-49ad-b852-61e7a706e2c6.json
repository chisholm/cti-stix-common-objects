{
    "type": "bundle",
    "id": "bundle--fd8ee5f7-46bd-45f3-89ef-2449a3be7388",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--ac409547-6bf2-49ad-b852-61e7a706e2c6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-14T01:38:15.140652Z",
            "modified": "2024-09-14T01:38:15.140652Z",
            "name": "CVE-2024-46692",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Mark get_wq_ctx() as atomic call\n\nCurrently get_wq_ctx() is wrongly configured as a standard call. When two\nSMC calls are in sleep and one SMC wakes up, it calls get_wq_ctx() to\nresume the corresponding sleeping thread. But if get_wq_ctx() is\ninterrupted, goes to sleep and another SMC call is waiting to be allocated\na waitq context, it leads to a deadlock.\n\nTo avoid this get_wq_ctx() must be an atomic call and can't be a standard\nSMC call. Hence mark get_wq_ctx() as a fast call.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-46692"
                }
            ]
        }
    ]
}