{
    "type": "bundle",
    "id": "bundle--2a4407b0-2bb6-4b51-ac20-ba236af3a3eb",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--acb6c687-4ae3-48da-873e-d1766934cf03",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-06T01:42:19.938702Z",
            "modified": "2024-11-06T01:42:19.938702Z",
            "name": "CVE-2024-36896",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nUSB: core: Fix access violation during port device removal\n\nTesting with KASAN and syzkaller revealed a bug in port.c:disable_store():\nusb_hub_to_struct_hub() can return NULL if the hub that the port belongs to\nis concurrently removed, but the function does not check for this\npossibility before dereferencing the returned value.\n\nIt turns out that the first dereference is unnecessary, since hub->intfdev\nis the parent of the port device, so it can be changed easily.  Adding a\ncheck for hub == NULL prevents further problems.\n\nThe same bug exists in the disable_show() routine, and it can be fixed the\nsame way.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-36896"
                }
            ]
        }
    ]
}