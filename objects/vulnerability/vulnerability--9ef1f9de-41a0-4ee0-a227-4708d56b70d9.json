{
    "type": "bundle",
    "id": "bundle--b080b188-0102-4f24-8214-2558cdfe14ce",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--9ef1f9de-41a0-4ee0-a227-4708d56b70d9",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-22T00:16:53.978956Z",
            "modified": "2024-05-22T00:16:53.978956Z",
            "name": "CVE-2021-47281",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nALSA: seq: Fix race of snd_seq_timer_open()\n\nThe timer instance per queue is exclusive, and snd_seq_timer_open()\nshould have managed the concurrent accesses.  It looks as if it's\nchecking the already existing timer instance at the beginning, but\nit's not right, because there is no protection, hence any later\nconcurrent call of snd_seq_timer_open() may override the timer\ninstance easily.  This may result in UAF, as the leftover timer\ninstance can keep running while the queue itself gets closed, as\nspotted by syzkaller recently.\n\nFor avoiding the race, add a proper check at the assignment of\ntmr->timeri again, and return -EBUSY if it's been already registered.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47281"
                }
            ]
        }
    ]
}