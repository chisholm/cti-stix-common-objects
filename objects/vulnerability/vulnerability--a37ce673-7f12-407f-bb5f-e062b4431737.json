{
    "type": "bundle",
    "id": "bundle--a8602848-7415-42f0-af70-9f79f964825e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a37ce673-7f12-407f-bb5f-e062b4431737",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-02T00:16:51.203263Z",
            "modified": "2024-05-02T00:16:51.203263Z",
            "name": "CVE-2024-27003",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nclk: Get runtime PM before walking tree for clk_summary\n\nSimilar to the previous commit, we should make sure that all devices are\nruntime resumed before printing the clk_summary through debugfs. Failure\nto do so would result in a deadlock if the thread is resuming a device\nto print clk state and that device is also runtime resuming in another\nthread, e.g the screen is turning on and the display driver is starting\nup. We remove the calls to clk_pm_runtime_{get,put}() in this path\nbecause they're superfluous now that we know the devices are runtime\nresumed. This also squashes a bug where the return value of\nclk_pm_runtime_get() wasn't checked, leading to an RPM count underflow\non error paths.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-27003"
                }
            ]
        }
    ]
}