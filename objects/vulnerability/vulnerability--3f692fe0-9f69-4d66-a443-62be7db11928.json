{
    "type": "bundle",
    "id": "bundle--408346c1-d674-4145-93c5-56d23ae15412",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3f692fe0-9f69-4d66-a443-62be7db11928",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-31T00:16:58.87417Z",
            "modified": "2024-05-31T00:16:58.87417Z",
            "name": "CVE-2024-36883",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix out-of-bounds access in ops_init\n\nnet_alloc_generic is called by net_alloc, which is called without any\nlocking. It reads max_gen_ptrs, which is changed under pernet_ops_rwsem. It\nis read twice, first to allocate an array, then to set s.len, which is\nlater used to limit the bounds of the array access.\n\nIt is possible that the array is allocated and another thread is\nregistering a new pernet ops, increments max_gen_ptrs, which is then used\nto set s.len with a larger than allocated length for the variable array.\n\nFix it by reading max_gen_ptrs only once in net_alloc_generic. If\nmax_gen_ptrs is later incremented, it will be caught in net_assign_generic.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-36883"
                }
            ]
        }
    ]
}