{
    "type": "bundle",
    "id": "bundle--e8214ca3-deab-4c30-a887-66e4a4751afd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1c4ac255-26a4-4696-9129-bd79a6f21139",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-14T00:17:08.39406Z",
            "modified": "2024-05-14T00:17:08.39406Z",
            "name": "CVE-2024-34704",
            "description": "era-compiler-solidity is the ZKsync compiler for Solidity.  The problem occurred during instruction selection in the `DAGCombine` phase while visiting the XOR operation. The issue arises when attempting to fold the expression `!(x cc y)` into `(x !cc y)`. To perform this transformation, the second operand of XOR should be a constant representing the true value. However, it was incorrectly assumed that -1 represents the true value, when in fact, 1 is the correct representation, so this transformation for this case should be skipped. This vulnerability is fixed in 1.4.1.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-34704"
                }
            ]
        }
    ]
}