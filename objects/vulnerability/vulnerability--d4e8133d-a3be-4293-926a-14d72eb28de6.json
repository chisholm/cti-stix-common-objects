{
    "type": "bundle",
    "id": "bundle--b2506b81-5924-446e-8a4f-430cf05de32e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--d4e8133d-a3be-4293-926a-14d72eb28de6",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-17T00:18:34.910834Z",
            "modified": "2024-07-17T00:18:34.910834Z",
            "name": "CVE-2022-48806",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\neeprom: ee1004: limit i2c reads to I2C_SMBUS_BLOCK_MAX\n\nCommit effa453168a7 (\"i2c: i801: Don't silently correct invalid transfer\nsize\") revealed that ee1004_eeprom_read() did not properly limit how\nmany bytes to read at once.\n\nIn particular, i2c_smbus_read_i2c_block_data_or_emulated() takes the\nlength to read as an u8.  If count == 256 after taking into account the\noffset and page boundary, the cast to u8 overflows.  And this is common\nwhen user space tries to read the entire EEPROM at once.\n\nTo fix it, limit each read to I2C_SMBUS_BLOCK_MAX (32) bytes, already\nthe maximum length i2c_smbus_read_i2c_block_data_or_emulated() allows.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48806"
                }
            ]
        }
    ]
}