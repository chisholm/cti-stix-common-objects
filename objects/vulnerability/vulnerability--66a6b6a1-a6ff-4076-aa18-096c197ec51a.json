{
    "type": "bundle",
    "id": "bundle--ce6e6e06-4519-475d-b489-66a8f27e15ec",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--66a6b6a1-a6ff-4076-aa18-096c197ec51a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-01-16T01:41:34.572584Z",
            "modified": "2025-01-16T01:41:34.572584Z",
            "name": "CVE-2024-57890",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nRDMA/uverbs: Prevent integer overflow issue\n\nIn the expression \"cmd.wqe_size * cmd.wr_count\", both variables are u32\nvalues that come from the user so the multiplication can lead to integer\nwrapping.  Then we pass the result to uverbs_request_next_ptr() which also\ncould potentially wrap.  The \"cmd.sge_count * sizeof(struct ib_uverbs_sge)\"\nmultiplication can also overflow on 32bit systems although it's fine on\n64bit systems.\n\nThis patch does two things.  First, I've re-arranged the condition in\nuverbs_request_next_ptr() so that the use controlled variable \"len\" is on\none side of the comparison by itself without any math.  Then I've modified\nall the callers to use size_mul() for the multiplications.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-57890"
                }
            ]
        }
    ]
}