{
    "type": "bundle",
    "id": "bundle--4afdbfd0-b524-4827-8d1c-847fa77cb2c9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--0d222808-1b56-49d0-971c-8dcba7582bd8",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-02-25T00:17:25.635547Z",
            "modified": "2024-02-25T00:17:25.635547Z",
            "name": "CVE-2024-0243",
            "description": "With the following crawler configuration:\n\n```python\nfrom bs4 import BeautifulSoup as Soup\n\nurl = \"https://example.com\"\nloader = RecursiveUrlLoader(\n    url=url, max_depth=2, extractor=lambda x: Soup(x, \"html.parser\").text\n)\ndocs = loader.load()\n```\n\nAn attacker in control of the contents of `https://example.com` could place a malicious HTML file in there with links like \"https://example.completely.different/my_file.html\" and the crawler would proceed to download that file as well even though `prevent_outside=True`.\n\nhttps://github.com/langchain-ai/langchain/blob/bf0b3cc0b5ade1fb95a5b1b6fa260e99064c2e22/libs/community/langchain_community/document_loaders/recursive_url_loader.py#L51-L51\n\nResolved in https://github.com/langchain-ai/langchain/pull/15559",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-0243"
                }
            ]
        }
    ]
}