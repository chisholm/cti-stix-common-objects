{
    "type": "bundle",
    "id": "bundle--dd090adf-9196-4b5a-a7c0-0cfee939783e",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--057043b9-38e4-48ef-844f-3dbd9da39d5e",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-06T00:17:20.459769Z",
            "modified": "2024-07-06T00:17:20.459769Z",
            "name": "CVE-2024-39472",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nxfs: fix log recovery buffer allocation for the legacy h_size fixup\n\nCommit a70f9fe52daa (\"xfs: detect and handle invalid iclog size set by\nmkfs\") added a fixup for incorrect h_size values used for the initial\numount record in old xfsprogs versions.  Later commit 0c771b99d6c9\n(\"xfs: clean up calculation of LR header blocks\") cleaned up the log\nreover buffer calculation, but stoped using the fixed up h_size value\nto size the log recovery buffer, which can lead to an out of bounds\naccess when the incorrect h_size does not come from the old mkfs\ntool, but a fuzzer.\n\nFix this by open coding xlog_logrec_hblks and taking the fixed h_size\ninto account for this calculation.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-39472"
                }
            ]
        }
    ]
}