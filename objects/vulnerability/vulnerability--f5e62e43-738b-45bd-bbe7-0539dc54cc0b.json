{
    "type": "bundle",
    "id": "bundle--8b852546-4bb6-494c-8164-d60345b2502b",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--f5e62e43-738b-45bd-bbe7-0539dc54cc0b",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-03T00:16:27.578048Z",
            "modified": "2024-04-03T00:16:27.578048Z",
            "name": "CVE-2024-1394",
            "description": "A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the \"return nil, nil, fail(...)\" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-1394"
                }
            ]
        }
    ]
}