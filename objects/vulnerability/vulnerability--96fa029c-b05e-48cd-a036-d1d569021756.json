{
    "type": "bundle",
    "id": "bundle--7bedd4f4-036d-4a30-8e2b-189044a87e91",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--96fa029c-b05e-48cd-a036-d1d569021756",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-23T00:16:45.127936Z",
            "modified": "2024-05-23T00:16:45.127936Z",
            "name": "CVE-2021-47469",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nspi: Fix deadlock when adding SPI controllers on SPI buses\n\nCurrently we have a global spi_add_lock which we take when adding new\ndevices so that we can check that we're not trying to reuse a chip\nselect that's already controlled.  This means that if the SPI device is\nitself a SPI controller and triggers the instantiation of further SPI\ndevices we trigger a deadlock as we try to register and instantiate\nthose devices while in the process of doing so for the parent controller\nand hence already holding the global spi_add_lock.  Since we only care\nabout concurrency within a single SPI bus move the lock to be per\ncontroller, avoiding the deadlock.\n\nThis can be easily triggered in the case of spi-mux.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47469"
                }
            ]
        }
    ]
}