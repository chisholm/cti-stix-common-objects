{
    "type": "bundle",
    "id": "bundle--f63a431a-92c0-492d-aef0-8abb1f5a6706",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--352fb6b4-cbec-4d60-ab07-ec650de75320",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-10T01:47:51.74218Z",
            "modified": "2024-11-10T01:47:51.74218Z",
            "name": "CVE-2024-50258",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: fix crash when config small gso_max_size/gso_ipv4_max_size\n\nConfig a small gso_max_size/gso_ipv4_max_size will lead to an underflow\nin sk_dst_gso_max_size(), which may trigger a BUG_ON crash,\nbecause sk->sk_gso_max_size would be much bigger than device limits.\nCall Trace:\ntcp_write_xmit\n    tso_segs = tcp_init_tso_segs(skb, mss_now);\n        tcp_set_skb_tso_segs\n            tcp_skb_pcount_set\n                // skb->len = 524288, mss_now = 8\n                // u16 tso_segs = 524288/8 = 65535 -> 0\n                tso_segs = DIV_ROUND_UP(skb->len, mss_now)\n    BUG_ON(!tso_segs)\nAdd check for the minimum value of gso_max_size and gso_ipv4_max_size.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50258"
                }
            ]
        }
    ]
}