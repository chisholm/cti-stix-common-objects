{
    "type": "bundle",
    "id": "bundle--3b5b0b77-a31e-4ef6-a167-f1891edc4cbd",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--a8dcddd0-8294-4b07-82a9-73939ec40710",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2025-02-27T01:47:33.181864Z",
            "modified": "2025-02-27T01:47:33.181864Z",
            "name": "CVE-2022-49549",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nx86/MCE/AMD: Fix memory leak when threshold_create_bank() fails\n\nIn mce_threshold_create_device(), if threshold_create_bank() fails, the\npreviously allocated threshold banks array @bp will be leaked because\nthe call to mce_threshold_remove_device() will not free it.\n\nThis happens because mce_threshold_remove_device() fetches the pointer\nthrough the threshold_banks per-CPU variable but bp is written there\nonly after the bank creation is successful, and not before, when\nthreshold_create_bank() fails.\n\nAdd a helper which unwinds all the bank creation work previously done\nand pass into it the previously allocated threshold banks array for\nfreeing.\n\n  [ bp: Massage. ]",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-49549"
                }
            ]
        }
    ]
}