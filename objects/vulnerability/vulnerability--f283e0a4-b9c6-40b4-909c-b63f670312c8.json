{
    "type": "bundle",
    "id": "bundle--76136fba-4d7c-45d0-bfe6-778700e188a9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--f283e0a4-b9c6-40b4-909c-b63f670312c8",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-04-02T00:16:20.755174Z",
            "modified": "2024-04-02T00:16:20.755174Z",
            "name": "CVE-2024-26630",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm: cachestat: fix folio read-after-free in cache walk\n\nIn cachestat, we access the folio from the page cache's xarray to compute\nits page offset, and check for its dirty and writeback flags.  However, we\ndo not hold a reference to the folio before performing these actions,\nwhich means the folio can concurrently be released and reused as another\nfolio/page/slab.\n\nGet around this altogether by just using xarray's existing machinery for\nthe folio page offsets and dirty/writeback states.\n\nThis changes behavior for tmpfs files to now always report zeroes in their\ndirty and writeback counters.  This is okay as tmpfs doesn't follow\nconventional writeback cache behavior: its pages get \"cleaned\" during\nswapout, after which they're no longer resident etc.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26630"
                }
            ]
        }
    ]
}