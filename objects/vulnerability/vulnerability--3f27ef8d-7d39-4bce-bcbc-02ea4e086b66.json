{
    "type": "bundle",
    "id": "bundle--c2f517ca-ae59-493d-b913-74012b35b2a6",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--3f27ef8d-7d39-4bce-bcbc-02ea4e086b66",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-03-03T00:17:05.511126Z",
            "modified": "2024-03-03T00:17:05.511126Z",
            "name": "CVE-2023-52509",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nravb: Fix use-after-free issue in ravb_tx_timeout_work()\n\nThe ravb_stop() should call cancel_work_sync(). Otherwise,\nravb_tx_timeout_work() is possible to use the freed priv after\nravb_remove() was called like below:\n\nCPU0\t\t\tCPU1\n\t\t\travb_tx_timeout()\nravb_remove()\nunregister_netdev()\nfree_netdev(ndev)\n// free priv\n\t\t\travb_tx_timeout_work()\n\t\t\t// use priv\n\nunregister_netdev() will call .ndo_stop() so that ravb_stop() is\ncalled. And, after phy_stop() is called, netif_carrier_off()\nis also called. So that .ndo_tx_timeout() will not be called\nafter phy_stop().",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-52509"
                }
            ]
        }
    ]
}