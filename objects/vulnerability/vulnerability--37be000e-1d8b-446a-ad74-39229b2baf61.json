{
    "type": "bundle",
    "id": "bundle--aaed1c75-006c-4765-b0e6-1b2f8ef1dfa2",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--37be000e-1d8b-446a-ad74-39229b2baf61",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-08-21T01:27:31.742951Z",
            "modified": "2024-08-21T01:27:31.742951Z",
            "name": "CVE-2024-43862",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: wan: fsl_qmc_hdlc: Convert carrier_lock spinlock to a mutex\n\nThe carrier_lock spinlock protects the carrier detection. While it is\nheld, framer_get_status() is called which in turn takes a mutex.\nThis is not correct and can lead to a deadlock.\n\nA run with PROVE_LOCKING enabled detected the issue:\n  [ BUG: Invalid wait context ]\n  ...\n  c204ddbc (&framer->mutex){+.+.}-{3:3}, at: framer_get_status+0x40/0x78\n  other info that might help us debug this:\n  context-{4:4}\n  2 locks held by ifconfig/146:\n  #0: c0926a38 (rtnl_mutex){+.+.}-{3:3}, at: devinet_ioctl+0x12c/0x664\n  #1: c2006a40 (&qmc_hdlc->carrier_lock){....}-{2:2}, at: qmc_hdlc_framer_set_carrier+0x30/0x98\n\nAvoid the spinlock usage and convert carrier_lock to a mutex.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-43862"
                }
            ]
        }
    ]
}