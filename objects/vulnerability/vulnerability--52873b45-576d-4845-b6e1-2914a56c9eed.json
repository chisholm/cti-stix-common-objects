{
    "type": "bundle",
    "id": "bundle--74c53046-24a8-417c-9650-6dc5abd97ac9",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--52873b45-576d-4845-b6e1-2914a56c9eed",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-02T00:16:50.915216Z",
            "modified": "2024-05-02T00:16:50.915216Z",
            "name": "CVE-2024-26993",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nfs: sysfs: Fix reference leak in sysfs_break_active_protection()\n\nThe sysfs_break_active_protection() routine has an obvious reference\nleak in its error path.  If the call to kernfs_find_and_get() fails then\nkn will be NULL, so the companion sysfs_unbreak_active_protection()\nroutine won't get called (and would only cause an access violation by\ntrying to dereference kn->parent if it was called).  As a result, the\nreference to kobj acquired at the start of the function will never be\nreleased.\n\nFix the leak by adding an explicit kobject_put() call when kn is NULL.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26993"
                }
            ]
        }
    ]
}