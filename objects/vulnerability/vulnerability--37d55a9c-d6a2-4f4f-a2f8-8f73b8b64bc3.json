{
    "type": "bundle",
    "id": "bundle--37e7e182-8b9a-42d8-86b4-319e5f013f65",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--37d55a9c-d6a2-4f4f-a2f8-8f73b8b64bc3",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-18T00:16:49.721494Z",
            "modified": "2024-05-18T00:16:49.721494Z",
            "name": "CVE-2023-52685",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\npstore: ram_core: fix possible overflow in persistent_ram_init_ecc()\n\nIn persistent_ram_init_ecc(), on 64-bit arches DIV_ROUND_UP() will return\n64-bit value since persistent_ram_zone::buffer_size has type size_t which\nis derived from the 64-bit *unsigned long*, while the ecc_blocks variable\nthis value gets assigned to has (always 32-bit) *int* type.  Even if that\nvalue fits into *int* type, an overflow is still possible when calculating\nthe size_t typed ecc_total variable further below since there's no cast to\nany 64-bit type before multiplication.  Declaring the ecc_blocks variable\nas *size_t* should fix this mess...\n\nFound by Linux Verification Center (linuxtesting.org) with the SVACE static\nanalysis tool.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2023-52685"
                }
            ]
        }
    ]
}