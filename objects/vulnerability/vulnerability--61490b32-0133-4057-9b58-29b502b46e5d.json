{
    "type": "bundle",
    "id": "bundle--1619e868-a649-413d-8f8d-b108bce56393",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--61490b32-0133-4057-9b58-29b502b46e5d",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-11-10T01:47:51.71891Z",
            "modified": "2024-11-10T01:47:51.71891Z",
            "name": "CVE-2024-50218",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nocfs2: pass u64 to ocfs2_truncate_inline maybe overflow\n\nSyzbot reported a kernel BUG in ocfs2_truncate_inline.  There are two\nreasons for this: first, the parameter value passed is greater than\nocfs2_max_inline_data_with_xattr, second, the start and end parameters of\nocfs2_truncate_inline are \"unsigned int\".\n\nSo, we need to add a sanity check for byte_start and byte_len right before\nocfs2_truncate_inline() in ocfs2_remove_inode_range(), if they are greater\nthan ocfs2_max_inline_data_with_xattr return -EINVAL.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50218"
                }
            ]
        }
    ]
}