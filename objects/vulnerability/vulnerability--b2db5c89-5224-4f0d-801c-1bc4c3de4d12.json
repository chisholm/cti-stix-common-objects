{
    "type": "bundle",
    "id": "bundle--8f3204c5-01e3-4885-99b4-b57e04171340",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--b2db5c89-5224-4f0d-801c-1bc4c3de4d12",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-02-28T00:15:21.724043Z",
            "modified": "2024-02-28T00:15:21.724043Z",
            "name": "CVE-2021-46974",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix masking negation logic upon negative dst register\n\nThe negation logic for the case where the off_reg is sitting in the\ndst register is not correct given then we cannot just invert the add\nto a sub or vice versa. As a fix, perform the final bitwise and-op\nunconditionally into AX from the off_reg, then move the pointer from\nthe src to dst and finally use AX as the source for the original\npointer arithmetic operation such that the inversion yields a correct\nresult. The single non-AX mov in between is possible given constant\nblinding is retaining it as it's not an immediate based operation.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-46974"
                }
            ]
        }
    ]
}