{
    "type": "bundle",
    "id": "bundle--c876f189-3a9c-41b1-8a6c-e5dcfb6b572d",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--8d634fa3-a82f-40b8-bdbc-8bd95bdb16b8",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T01:45:31.605596Z",
            "modified": "2024-10-22T01:45:31.605596Z",
            "name": "CVE-2022-48985",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnet: mana: Fix race on per-CQ variable napi work_done\n\nAfter calling napi_complete_done(), the NAPIF_STATE_SCHED bit may be\ncleared, and another CPU can start napi thread and access per-CQ variable,\ncq->work_done. If the other thread (for example, from busy_poll) sets\nit to a value >= budget, this thread will continue to run when it should\nstop, and cause memory corruption and panic.\n\nTo fix this issue, save the per-CQ work_done variable in a local variable\nbefore napi_complete_done(), so it won't be corrupted by a possible\nconcurrent thread after napi_complete_done().\n\nAlso, add a flag bit to advertise to the NIC firmware: the NAPI work_done\nvariable race is fixed, so the driver is able to reliably support features\nlike busy_poll.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2022-48985"
                }
            ]
        }
    ]
}