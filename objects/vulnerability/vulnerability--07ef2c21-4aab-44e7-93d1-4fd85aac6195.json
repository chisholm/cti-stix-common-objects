{
    "type": "bundle",
    "id": "bundle--e5523b8c-73de-49ac-9c26-4e089b90dfaa",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--07ef2c21-4aab-44e7-93d1-4fd85aac6195",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-09-05T01:38:53.184113Z",
            "modified": "2024-09-05T01:38:53.184113Z",
            "name": "CVE-2024-44968",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ntick/broadcast: Move per CPU pointer access into the atomic section\n\nThe recent fix for making the take over of the broadcast timer more\nreliable retrieves a per CPU pointer in preemptible context.\n\nThis went unnoticed as compilers hoist the access into the non-preemptible\nregion where the pointer is actually used. But of course it's valid that\nthe compiler keeps it at the place where the code puts it which rightfully\ntriggers:\n\n  BUG: using smp_processor_id() in preemptible [00000000] code:\n       caller is hotplug_cpu__broadcast_tick_pull+0x1c/0xc0\n\nMove it to the actual usage site which is in a non-preemptible region.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-44968"
                }
            ]
        }
    ]
}