{
    "type": "bundle",
    "id": "bundle--f8d97fe6-5aea-42e4-9f22-1eed929461ea",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--2b12b3b7-2605-47be-9632-5fd898ab82a5",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-23T00:16:45.142304Z",
            "modified": "2024-05-23T00:16:45.142304Z",
            "name": "CVE-2021-47467",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nkunit: fix reference count leak in kfree_at_end\n\nThe reference counting issue happens in the normal path of\nkfree_at_end(). When kunit_alloc_and_get_resource() is invoked, the\nfunction forgets to handle the returned resource object, whose refcount\nincreased inside, causing a refcount leak.\n\nFix this issue by calling kunit_alloc_resource() instead of\nkunit_alloc_and_get_resource().\n\nFixed the following when applying:\nShuah Khan <skhan@linuxfoundation.org>\n\nCHECK: Alignment should match open parenthesis\n+\tkunit_alloc_resource(test, NULL, kfree_res_free, GFP_KERNEL,\n \t\t\t\t     (void *)to_free);",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2021-47467"
                }
            ]
        }
    ]
}