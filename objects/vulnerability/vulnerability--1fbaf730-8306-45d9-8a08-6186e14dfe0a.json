{
    "type": "bundle",
    "id": "bundle--ee03c292-6cbf-42a9-b598-d670316d312f",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--1fbaf730-8306-45d9-8a08-6186e14dfe0a",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-10-22T01:45:26.202406Z",
            "modified": "2024-10-22T01:45:26.202406Z",
            "name": "CVE-2024-50060",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring: check if we need to reschedule during overflow flush\n\nIn terms of normal application usage, this list will always be empty.\nAnd if an application does overflow a bit, it'll have a few entries.\nHowever, nothing obviously prevents syzbot from running a test case\nthat generates a ton of overflow entries, and then flushing them can\ntake quite a while.\n\nCheck for needing to reschedule while flushing, and drop our locks and\ndo so if necessary. There's no state to maintain here as overflows\nalways prune from head-of-list, hence it's fine to drop and reacquire\nthe locks at the end of the loop.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-50060"
                }
            ]
        }
    ]
}