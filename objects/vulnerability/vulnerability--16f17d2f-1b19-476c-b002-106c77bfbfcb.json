{
    "type": "bundle",
    "id": "bundle--f516ea55-c94e-4575-9283-cff3f516a80c",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--16f17d2f-1b19-476c-b002-106c77bfbfcb",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-05-02T00:16:50.923063Z",
            "modified": "2024-05-02T00:16:50.923063Z",
            "name": "CVE-2024-26988",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\ninit/main.c: Fix potential static_command_line memory overflow\n\nWe allocate memory of size 'xlen + strlen(boot_command_line) + 1' for\nstatic_command_line, but the strings copied into static_command_line are\nextra_command_line and command_line, rather than extra_command_line and\nboot_command_line.\n\nWhen strlen(command_line) > strlen(boot_command_line), static_command_line\nwill overflow.\n\nThis patch just recovers strlen(command_line) which was miss-consolidated\nwith strlen(boot_command_line) in the commit f5c7310ac73e (\"init/main: add\nchecks for the return value of memblock_alloc*()\")",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-26988"
                }
            ]
        }
    ]
}