{
    "type": "bundle",
    "id": "bundle--54b9aa6e-faf6-47da-a535-798991fa5fed",
    "objects": [
        {
            "type": "vulnerability",
            "spec_version": "2.1",
            "id": "vulnerability--ddae17e5-eec3-4251-acc6-3477aecdecde",
            "created_by_ref": "identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a",
            "created": "2024-07-06T00:17:20.394758Z",
            "modified": "2024-07-06T00:17:20.394758Z",
            "name": "CVE-2024-39482",
            "description": "In the Linux kernel, the following vulnerability has been resolved:\n\nbcache: fix variable length array abuse in btree_iter\n\nbtree_iter is used in two ways: either allocated on the stack with a\nfixed size MAX_BSETS, or from a mempool with a dynamic size based on the\nspecific cache set. Previously, the struct had a fixed-length array of\nsize MAX_BSETS which was indexed out-of-bounds for the dynamically-sized\niterators, which causes UBSAN to complain.\n\nThis patch uses the same approach as in bcachefs's sort_iter and splits\nthe iterator into a btree_iter with a flexible array member and a\nbtree_iter_stack which embeds a btree_iter as well as a fixed-length\ndata array.",
            "external_references": [
                {
                    "source_name": "cve",
                    "external_id": "CVE-2024-39482"
                }
            ]
        }
    ]
}